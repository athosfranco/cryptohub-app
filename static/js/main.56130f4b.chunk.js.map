{"version":3,"sources":["Components/Header/Header.jsx","Components/CoinDetails/InfoTag.jsx","Components/CoinCard/CoinCard.jsx","Components/CoinList/CoinList.jsx","Components/Navbar/NavbarContainer.jsx","Components/CoinDetails/LineChart.jsx","Components/CoinDetails/CoinDetails.jsx","Components/NewsSection/NewsCard.jsx","Components/NewsSection/NewsSection.jsx","windowDimension.js","Components/ScrollToTop/ScrollToTop.jsx","Components/Footer/Footer.jsx","App.jsx","index.js"],"names":["Header","appLanguage","onGetInputData","onGetNumberOfCoinsShown","useState","fetchingCoins","setFetchingCoins","listLengthHandler","e","preventDefault","listLength","Number","target","textContent","split","trim","setTimeout","className","icon","faSearch","style","color","marginRight","fontSize","autoFocus","type","placeholder","onChange","value","display","flexDirection","justifyContent","alignItems","DropdownButton","id","title","variant","paddingLeft","Dropdown","Item","as","onClick","Spinner","animation","marginTop","console","log","InfoTag","textInPt","textInEn","currency","tagDescriptionPt","tagDescriptionEn","classes","popover","Popover","Body","OverlayTrigger","trigger","placement","overlay","faInfoCircle","toUpperCase","toLocaleString","minimumFractionDigits","maximumFractionDigits","CoinCard","coin","onGetSelectedCoin","Card","backgroundColor","src","image","alt","Title","name","Subtitle","symbol","market_cap_rank","Text","current_price","price_change_percentage_24h","faAngleDoubleUp","margin","toFixed","faAngleDoubleDown","market_cap","total_volume","Button","width","border","padding","selectedCoin","parentNode","firstChild","faChartLine","CoinList","onGetCoinData","filteredCoins","selectedCoinHandler","dataFromCoin","map","NavbarContainer","currencies","onSetCurrency","onSwitchLanguage","viewportSize","currencyHandler","newCurrency","find","text","navbarBgColor","setNavbarBgColor","window","addEventListener","scrollY","switchLanguage","includes","Navbar","collapseOnSelect","expand","fixed","transition","Container","Toggle","Collapse","Nav","NavDropdown","LineChart","pricesDatapoints","onGetDays","prices","datapoints","pricesHours","datasetLabelPt","datasetLabelEn","priceData","labels","datasets","data","fill","borderColor","pointBackgroundColor","pointBorderColor","label","updateNumberOfDays","buttonStyle","marginBottom","ButtonGroup","height","CoinDetails","onCloseCoinDetail","chartData","setChartData","setPricesDatapoints","coinStats","setCoinStats","chartDataPeriod","setChartDataPeriod","intervalParameter","setIntervalParameter","endpoint","useEffect","axios","get","then","response","catch","error","getPricesDatapoints","priceDatapoint","unixTimestamp","date","Date","formattedDate","String","hour","toLocaleTimeString","endpoint_2","requestedCoin","CloseButton","margint","ath","atl","circulating_supply","fully_diluted_valuation","numberOfDays","NewsCard","author","description","url","rel","href","NewsSection","newsfeed","setNewsfeed","numberOfNewsBeingShown","setNumberOfNewsBeingShown","showMoreNewsDisplay","setShowMoreNewsDisplay","today","toISOString","slice","yesterday","setDate","getDate","newsfeedArray","articles","length","flexWrap","filter","item","index","news","urlToImage","source","windowDimension","innerWidth","document","documentElement","clientWidth","body","innerHeight","clientHeight","ScrollToTop","showScroll","setShowScroll","pageYOffset","position","bottom","right","cursor","scrollTo","top","behavior","faArrowUp","Footer","faGithubSquare","faLinkedin","App","search","setSearch","coins","setCoins","setAppLanguage","navigator","language","setCurrency","coinData","setCoinData","numberOfCoinsShown","setNumberOfCoinsShown","scrollRef","useRef","newsRef","toLowerCase","currencyString","chosenLanguage","inputData","ref","coinName","coinObject","current","scrollIntoView","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.56130f4b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Dropdown, DropdownButton, Spinner } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./Header.css\";\r\n\r\nconst Header = ({ appLanguage, onGetInputData, onGetNumberOfCoinsShown }) => {\r\n  //states\r\n  const [fetchingCoins, setFetchingCoins] = useState(false);\r\n\r\n  //pega valor inserido no input\r\n  const catchInputValue = (e) => onGetInputData(e.target.value);\r\n\r\n  //função que cuida do número de cards de moedas exibidos na página\r\n  const listLengthHandler = (e) => {\r\n    setFetchingCoins(true);\r\n    e.preventDefault();\r\n    const listLength = Number(e.target.textContent.split(\" \")[1].trim());\r\n    onGetNumberOfCoinsShown(listLength);\r\n    setTimeout(() => {\r\n      setFetchingCoins(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header-container\">\r\n        <div className=\"image_preview\"></div>\r\n\r\n        <h1>CryptoHub</h1>\r\n        <p>\r\n          {appLanguage === \"pt-BR\"\r\n            ? \"Tenha acesso a dados e estatísticas sobre as principais Criptomoedas do mercado.\"\r\n            : \"Get access to all the data about the main Cryptocoins on the market.\"}\r\n        </p>\r\n\r\n        <form>\r\n          <FontAwesomeIcon\r\n            icon={faSearch}\r\n            style={{\r\n              color: \"#e2e2e2\",\r\n              marginRight: \"10px\",\r\n              fontSize: \"1.2rem\",\r\n            }}\r\n          />\r\n          <input\r\n            autoFocus\r\n            className=\"coin-input\"\r\n            type=\"text\"\r\n            placeholder=\"Ex.: Bitcoin, Dogecoin...\"\r\n            onChange={catchInputValue}\r\n          ></input>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <DropdownButton\r\n              id=\"dropdown-item-button\"\r\n              title={\r\n                appLanguage === \"pt-BR\"\r\n                  ? \"Filtrar resultados\"\r\n                  : \"Filter results\"\r\n              }\r\n              variant=\"link\"\r\n              style={{ paddingLeft: \"40px\" }}\r\n            >\r\n              <Dropdown.Item as=\"button\" onClick={listLengthHandler}>\r\n                {appLanguage === \"pt-BR\"\r\n                  ? \"Mostrar 25 resultados\"\r\n                  : \"Show 25 results\"}\r\n              </Dropdown.Item>\r\n              <Dropdown.Item as=\"button\" onClick={listLengthHandler}>\r\n                {appLanguage === \"pt-BR\"\r\n                  ? \"Mostrar 50 resultados\"\r\n                  : \"Show 50 results\"}\r\n              </Dropdown.Item>\r\n              <Dropdown.Item as=\"button\" onClick={listLengthHandler}>\r\n                {appLanguage === \"pt-BR\"\r\n                  ? \"Mostrar 150 resultados\"\r\n                  : \"Show 150 results\"}\r\n              </Dropdown.Item>\r\n              <Dropdown.Item as=\"button\" onClick={listLengthHandler}>\r\n                {appLanguage === \"pt-BR\"\r\n                  ? \"Mostrar 250 resultados\"\r\n                  : \"Show 250 results\"}\r\n              </Dropdown.Item>\r\n            </DropdownButton>\r\n            {fetchingCoins === true ? (\r\n              <Spinner\r\n                animation=\"border\"\r\n                style={{ color: \"white\", marginTop: \"5px\" }}\r\n              />\r\n            ) : (\r\n              console.log(\"not fetching coins\")\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Popover, OverlayTrigger } from \"react-bootstrap\";\r\n\r\n//InfoTag.jsx é cada uma das 'tags' contendo informações sobre a moeda.\r\nconst InfoTag = ({\r\n  className,\r\n  textInPt,\r\n  textInEn,\r\n  value,\r\n  appLanguage,\r\n  currency,\r\n  tagDescriptionPt,\r\n  tagDescriptionEn,\r\n}) => {\r\n  const classes = `${className}`;\r\n  const popover = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Header as=\"h4\" style={{ color: \"black\" }}>\r\n        {appLanguage === \"pt-BR\" ? textInPt : textInEn}\r\n      </Popover.Header>\r\n      <Popover.Body>\r\n        {appLanguage === \"pt-BR\" ? tagDescriptionPt : tagDescriptionEn}\r\n      </Popover.Body>\r\n    </Popover>\r\n  );\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <OverlayTrigger trigger=\"hover\" placement=\"top\" overlay={popover}>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <p>{appLanguage === \"pt-BR\" ? textInPt : textInEn}</p>\r\n          <FontAwesomeIcon\r\n            icon={faInfoCircle}\r\n            style={{ color: \"#537895\", marginRight: \"10px\" }}\r\n          />\r\n        </div>\r\n      </OverlayTrigger>\r\n      <p className=\"info-value\">\r\n        {`${currency?.toUpperCase()} `}\r\n        {currency\r\n          ? value?.toLocaleString(appLanguage, {\r\n              minimumFractionDigits: 2,\r\n              maximumFractionDigits: 2,\r\n            })\r\n          : value?.toLocaleString(\"pt-BR\", {\r\n              maximumFractionDigits: 0,\r\n            })}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoTag;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport {\r\n  faAngleDoubleUp,\r\n  faAngleDoubleDown,\r\n  faChartLine,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport InfoTag from \"../CoinDetails/InfoTag.jsx\";\r\n\r\nconst CoinCard = ({ coin, currency, appLanguage, onGetSelectedCoin }) => {\r\n  //envia 'selectedCoin' pra CoinList\r\n  const selectedCoinHandler = (e) => {\r\n    const selectedCoin =\r\n      e.target.parentNode.parentNode.parentNode.firstChild.textContent\r\n        .split(\"(\")[0]\r\n        .trim();\r\n    onGetSelectedCoin(selectedCoin);\r\n  };\r\n\r\n  return (\r\n    <Card value={coin.id} className=\"card border-0\">\r\n      <Card.Body\r\n        style={{\r\n          backgroundColor: \"#041A29\",\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ display: \"flex\" }}>\r\n            <img src={coin.image} alt=\"\"></img>\r\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              {\" \"}\r\n              <Card.Title>{coin.name}</Card.Title>\r\n              <Card.Subtitle className=\"mb-2 text-muted\">\r\n                ({coin.symbol.toUpperCase()})\r\n              </Card.Subtitle>\r\n            </div>\r\n          </div>\r\n          <p className=\"card-rank\">#{coin?.market_cap_rank}</p>\r\n        </div>\r\n\r\n        <Card.Text className=\"card-price\">\r\n          {`${currency.toUpperCase()} `}\r\n          {`${coin.current_price.toLocaleString(appLanguage, {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n          })} `}\r\n          {coin.price_change_percentage_24h > 0 ? (\r\n            <p className=\"card-price-up\">\r\n              <FontAwesomeIcon\r\n                icon={faAngleDoubleUp}\r\n                style={{ color: \"#2cb362\", margin: \"0px 8px\" }}\r\n              />\r\n              {coin.price_change_percentage_24h.toFixed(2)}%\r\n            </p>\r\n          ) : (\r\n            <p className=\"card-price-down\">\r\n              <FontAwesomeIcon\r\n                icon={faAngleDoubleDown}\r\n                style={{ color: \"#bd5e74\", margin: \"0px 8px\" }}\r\n              />\r\n              {coin.price_change_percentage_24h.toFixed(2)}%\r\n            </p>\r\n          )}\r\n        </Card.Text>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <InfoTag\r\n            className=\"info-container-card\"\r\n            textInPt=\"Capitalização de Mercado\"\r\n            textInEn=\"Market Cap\"\r\n            currency={currency}\r\n            value={coin.market_cap}\r\n            appLanguage={appLanguage}\r\n            tagDescriptionPt=\"É o valor total de todas as moedas mineradas. É calculada multiplicando o número de moedas em circulação pelo atual preço de mercado de uma só moeda.\"\r\n            tagDescriptionEn=\"Refers to the total market value of a cryptocurrency's circulating supply. (Market Cap = Current Price x Circulating Supply)\"\r\n          />\r\n          <InfoTag\r\n            className=\"info-container-card\"\r\n            textInPt=\"Volume Total\"\r\n            textInEn=\"Total Volume\"\r\n            currency={currency}\r\n            value={coin.total_volume}\r\n            appLanguage={appLanguage}\r\n            tagDescriptionPt=\"Uma medida do volume de negociação total desta criptomeda em todas as plataformas rastreadas nas últimas 24 horas. Esse valor é rastreado continuamente, sem horário de abertura e/ou fechamento.\"\r\n            tagDescriptionEn=\"A measure of a cryptocurrency trading volume across all tracked platforms in the last 24 hours. This is tracked on a rolling 24-hour basis with no open/closing times.\"\r\n          />\r\n          <Button\r\n            style={{\r\n              width: \"95%\",\r\n              margin: \"0 auto\",\r\n              backgroundColor: \"#072F49\",\r\n              border: \"none\",\r\n              padding: \"1rem\",\r\n            }}\r\n            onClick={selectedCoinHandler}\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={faChartLine}\r\n              style={{ fontSize: \"1.2rem\", margin: \"0px 8px\" }}\r\n            />\r\n            {appLanguage === \"pt-BR\" ? \"Mostrar Detalhes\" : \"Show Details\"}\r\n          </Button>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CoinCard;\r\n","import React from \"react\";\r\nimport CoinCard from \"../CoinCard/CoinCard.jsx\";\r\nimport \"./CoinList.css\";\r\n\r\nconst CoinList = ({ onGetCoinData, currency, filteredCoins, appLanguage }) => {\r\n  //Pega o nome da moeda selecionada em CoinCard.jsx e envia para App.js\r\n  // const selectedCoinHandler = (dataFromCoin) => onGetCoinData(dataFromCoin);\r\n  const selectedCoinHandler = (dataFromCoin) => {\r\n    onGetCoinData(dataFromCoin);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <div className=\"coin-cards-container\">\r\n          <div className=\"cards\">\r\n            {filteredCoins.map((coin) => {\r\n              return (\r\n                <CoinCard\r\n                  coin={coin}\r\n                  currency={currency}\r\n                  appLanguage={appLanguage}\r\n                  selectedCoin={coin.name}\r\n                  onGetSelectedCoin={selectedCoinHandler}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CoinList;\r\n","import React, { useState } from \"react\";\r\nimport { Nav, Navbar, NavDropdown, Container } from \"react-bootstrap\";\r\nimport \"./NavbarContainer.css\";\r\n\r\nconst NavbarContainer = ({\r\n  currencies,\r\n  currency,\r\n  onSetCurrency,\r\n  onSwitchLanguage,\r\n  appLanguage,\r\n  viewportSize,\r\n}) => {\r\n  //Altera a moeda de conversão\r\n  const currencyHandler = (e) => {\r\n    const newCurrency = currencies.find(\r\n      (currency) => currency.text === e.target.text\r\n    );\r\n    onSetCurrency(newCurrency.value);\r\n  };\r\n\r\n  //states\r\n  const [navbarBgColor, setNavbarBgColor] = useState(\"rgba(7, 38, 60, 0)\");\r\n\r\n  //Torna a navbar sólida com scroll\r\n  const scrollHandler = (e) => {\r\n    window.scrollY > 250\r\n      ? setNavbarBgColor(\"#041a29\")\r\n      : setNavbarBgColor(\"rgba(7, 38, 60, 0)\");\r\n  };\r\n  window.addEventListener(\"scroll\", scrollHandler);\r\n\r\n  //envia o valor do input do idioma escolhido para App.js\r\n  const switchLanguage = (e) => {\r\n    onSwitchLanguage(e.target.text.includes(\"PT-BR\") ? \"pt-BR\" : \"en-US\");\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      expand=\"lg\"\r\n      variant=\"dark\"\r\n      fixed=\"top\"\r\n      style={{\r\n        backgroundColor: viewportSize.width <= 760 ? \"#041a29\" : navbarBgColor,\r\n        transition: \"0.5s ease\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <Container>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          {/* <Nav className=\"me-auto\">\r\n            <Nav.Item\r\n              className=\"nav-item\"\r\n              onClick={navHandler}\r\n              value={\"cripto\"}\r\n            >\r\n              {appLanguage === \"pt-BR\" ? \"Criptomoedas\" : \"Cryptocurrencies\"}\r\n            </Nav.Item>\r\n            <Nav.Item className=\"nav-item\" onClick={navHandler} value={\"news\"}>\r\n              {appLanguage === \"pt-BR\" ? \"Notícias\" : \"News\"}\r\n            </Nav.Item>\r\n          </Nav> */}\r\n          <Nav className=\"m-auto\">\r\n            <NavDropdown\r\n              title={`${\r\n                appLanguage === \"pt-BR\"\r\n                  ? \"Moeda de Conversão\"\r\n                  : \"Conversion Currency\"\r\n              } (${currency.toUpperCase()})`}\r\n              id=\"currency-nav-dropdown\"\r\n            >\r\n              {currencies.map((currency) => {\r\n                return (\r\n                  <NavDropdown.Item\r\n                    onClick={currencyHandler}\r\n                    key={currency.text}\r\n                  >\r\n                    {currency.text}\r\n                  </NavDropdown.Item>\r\n                );\r\n              })}\r\n            </NavDropdown>\r\n            <NavDropdown\r\n              title={`${\r\n                appLanguage === \"pt-BR\" ? \"Mudar Idioma\" : \"Change Language\"\r\n              } (${appLanguage.toUpperCase()})`}\r\n              id=\"language-nav-dropdown\"\r\n            >\r\n              <NavDropdown.Item onClick={switchLanguage}>\r\n                {\"Português (PT-BR)\"}\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={switchLanguage}>\r\n                {\"English (EN-US)\"}\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavbarContainer;\r\n","import React from \"react\";\r\nimport { ButtonGroup, Button } from \"react-bootstrap\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = ({\r\n  pricesDatapoints,\r\n  currency,\r\n  appLanguage,\r\n  onGetDays,\r\n  selectedCoin,\r\n  viewportSize,\r\n}) => {\r\n  //Price Data\r\n  const prices = pricesDatapoints?.map((datapoints) => datapoints[3]);\r\n  const pricesHours = pricesDatapoints?.map((datapoints) => datapoints[1]);\r\n\r\n  //linechart label string\r\n  const datasetLabelPt = `Preço da ${\r\n    selectedCoin.name\r\n  } (1 ${selectedCoin.symbol.toUpperCase()} convertido para ${currency.toUpperCase()})`;\r\n  const datasetLabelEn = `${\r\n    selectedCoin.name\r\n  } Price (1 ${selectedCoin.symbol.toUpperCase()} converted to ${currency.toUpperCase()})`;\r\n\r\n  //Configurações do linechart\r\n  const priceData = {\r\n    labels: pricesHours,\r\n    datasets: [\r\n      {\r\n        data: prices,\r\n        fill: true,\r\n        backgroundColor: \"rgba(0, 255, 68, 0.1)\",\r\n        borderColor: \"#2cb362\",\r\n        pointBackgroundColor: \"#2cb362\",\r\n        pointBorderColor: \"#00ff44\",\r\n        label: appLanguage === \"pt-BR\" ? datasetLabelPt : datasetLabelEn,\r\n      },\r\n    ],\r\n  };\r\n\r\n  //Atualiza o intervalo temporal exibido no gráfico\r\n  const updateNumberOfDays = (e) => onGetDays(e.target.value);\r\n\r\n  //\r\n\r\n  const buttonStyle = { backgroundColor: \"#4E7393\", border: \"0px\" };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"flex-end\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          marginBottom: \"30px\",\r\n        }}\r\n      >\r\n        <ButtonGroup aria-label=\"time-period\">\r\n          <Button\r\n            style={buttonStyle}\r\n            variant=\"secondary\"\r\n            onClick={updateNumberOfDays}\r\n            value={1}\r\n          >\r\n            24hrs\r\n          </Button>\r\n          <Button\r\n            style={buttonStyle}\r\n            variant=\"secondary\"\r\n            onClick={updateNumberOfDays}\r\n            value={6}\r\n          >\r\n            7d\r\n          </Button>\r\n          <Button\r\n            style={buttonStyle}\r\n            variant=\"secondary\"\r\n            onClick={updateNumberOfDays}\r\n            value={29}\r\n          >\r\n            30d\r\n          </Button>\r\n          <Button\r\n            style={buttonStyle}\r\n            variant=\"secondary\"\r\n            onClick={updateNumberOfDays}\r\n            value={89}\r\n          >\r\n            90d\r\n          </Button>\r\n          <Button\r\n            style={buttonStyle}\r\n            variant=\"secondary\"\r\n            onClick={updateNumberOfDays}\r\n            value={364}\r\n          >\r\n            365d{\" \"}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </div>\r\n\r\n      <Line\r\n        data={priceData}\r\n        width={viewportSize.width <= 769 ? \"300px\" : \"1000px\"}\r\n        height={viewportSize.width <= 769 ? \"200px\" : \"400px\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport InfoTag from \"./InfoTag\";\r\nimport LineChart from \"./LineChart\";\r\nimport { CloseButton } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleDoubleUp,\r\n  faAngleDoubleDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./CoinDetails.css\";\r\n\r\nconst CoinDetails = ({\r\n  currency,\r\n  appLanguage,\r\n  selectedCoin,\r\n  onCloseCoinDetail,\r\n  viewportSize,\r\n}) => {\r\n  //states\r\n  const [chartData, setChartData] = useState([]); //Armazena os dados 'puros' vindos da API\r\n  const [pricesDatapoints, setPricesDatapoints] = useState([]); //Armazena os dados transformados em datapoints para alimentar o linechart\r\n  const [coinStats, setCoinStats] = useState(\"\");\r\n  const [chartDataPeriod, setChartDataPeriod] = useState(1); //Controla o número de dias em exibição no gráfico\r\n  const [intervalParameter, setIntervalParameter] = useState(\"hourly\");\r\n\r\n  //Handlers\r\n  const numberOfDaysHandler = (numberOfDays) => {\r\n    setChartDataPeriod(numberOfDays);\r\n    if (numberOfDays > 1) setIntervalParameter(\"daily\");\r\n    else setIntervalParameter(\"hourly\");\r\n  };\r\n\r\n  //endpoint que vai alimentar o linechart\r\n  let endpoint = `https://api.coingecko.com/api/v3/coins/${selectedCoin.id}/market_chart?vs_currency=${currency}&days=${chartDataPeriod}&interval=${intervalParameter}`;\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(endpoint)\r\n      .then((response) => {\r\n        setChartData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [endpoint]);\r\n\r\n  //atualiza automaticamente sempre que chartData é atualizado\r\n  useEffect(() => {\r\n    //Esse .map gera uma array com os datapoints de PREÇO\r\n    const getPricesDatapoints = chartData?.prices?.map((priceDatapoint) => {\r\n      //Converte o formato de tempo em UNIX para Date\r\n      let unixTimestamp = priceDatapoint[0];\r\n      let date = new Date(unixTimestamp);\r\n      let formattedDate = String(date).split(\" \");\r\n      formattedDate = `${formattedDate[2]}/${formattedDate[1]}`;\r\n\r\n      //Pega a hora correspondente\r\n      let hour = date.toLocaleTimeString(\"pt-BR\").split(\":\");\r\n      let formattedHour = `${formattedDate} (${hour[0]}:${hour[1]})`;\r\n\r\n      //Pega o preço e o converte para formato legível pelo usuário\r\n      let priceAtCurrentTime = priceDatapoint[1].toLocaleString(\"pt-BR\", {\r\n        maximumFractionDigits: 2,\r\n      });\r\n      return [formattedDate, formattedHour, priceAtCurrentTime, priceDatapoint];\r\n    });\r\n\r\n    setPricesDatapoints(getPricesDatapoints);\r\n  }, [chartData]);\r\n\r\n  //Fecha e volta pra lista\r\n  const closeCoinDetail = () => onCloseCoinDetail(null); //Envia 'null' como valor para App\r\n\r\n  //endpoint que vai alimentar os dados atuais da moeda\r\n  let endpoint_2 = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=250&page=1&sparkline=false`;\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(endpoint_2)\r\n      .then((response) => {\r\n        const requestedCoin = response.data.find((coin) => {\r\n          return coin.id === selectedCoin.id;\r\n        });\r\n        setCoinStats(requestedCoin);\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [currency, appLanguage]);\r\n\r\n  return (\r\n    <div className=\"coin-details-container\">\r\n      <div className=\"coin-details-name-container\">\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <img src={coinStats?.image} alt=\"\" />\r\n          <h2>\r\n            {coinStats?.name} ({coinStats?.symbol?.toUpperCase()})\r\n          </h2>\r\n        </div>\r\n        <CloseButton variant=\"white\" onClick={closeCoinDetail} />\r\n      </div>\r\n      <div className=\"coin-details-price-container\">\r\n        <h3>\r\n          {currency.toUpperCase()}{\" \"}\r\n          {`${coinStats?.current_price?.toLocaleString(appLanguage, {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n          })} `}\r\n        </h3>\r\n        <h4\r\n          style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"8px\" }}\r\n        >\r\n          {selectedCoin.price_change_percentage_24h > 0 ? (\r\n            <FontAwesomeIcon\r\n              icon={faAngleDoubleUp}\r\n              style={{ color: \"#2cb362\", margin: \"0px 8px\" }}\r\n            />\r\n          ) : (\r\n            <FontAwesomeIcon\r\n              icon={faAngleDoubleDown}\r\n              style={{ color: \"#bd5e74\", margint: \"0px 8px\" }}\r\n            />\r\n          )}\r\n          {selectedCoin.price_change_percentage_24h > 0 ? (\r\n            <p\r\n              style={{\r\n                color: \"#2cb362\",\r\n                marginBottom: \"0\",\r\n              }}\r\n            >\r\n              {selectedCoin.price_change_percentage_24h.toFixed(2)}%\r\n              <span> (24h)</span>\r\n            </p>\r\n          ) : (\r\n            <p style={{ color: \"#bd5e72\", marginBottom: \"0\" }}>\r\n              {selectedCoin.price_change_percentage_24h.toFixed(2)}%\r\n              <span> (24h)</span>\r\n            </p>\r\n          )}\r\n        </h4>\r\n      </div>\r\n      <div className=\"coin-details-statistics-container\">\r\n        <InfoTag\r\n          className=\"info-container\"\r\n          textInPt=\"Posição\"\r\n          textInEn=\"Rank\"\r\n          currency={\"\"}\r\n          value={coinStats?.market_cap_rank}\r\n          appLanguage={appLanguage}\r\n          tagDescriptionPt=\"Qual lugar essa moeda ocupa no ranking de criptomoedas (baseado no valor atual do preço).\"\r\n          tagDescriptionEn=\"Which position this cryptocurrency is on the price ranking of all cryptocurrencies.\"\r\n        />\r\n        <InfoTag\r\n          className=\"info-container\"\r\n          textInPt=\"Capitalização de Mercado\"\r\n          textInEn=\"Market Cap\"\r\n          currency={currency}\r\n          value={coinStats.market_cap}\r\n          appLanguage={appLanguage}\r\n          tagDescriptionPt=\"É o valor total de todas as moedas mineradas. É calculada multiplicando o número de moedas em circulação pelo atual preço de mercado de uma só moeda.\"\r\n          tagDescriptionEn=\"Refers to the total market value of a cryptocurrency's circulating supply. (Market Cap = Current Price x Circulating Supply)\"\r\n        />\r\n        <InfoTag\r\n          className=\"info-container\"\r\n          textInPt=\"PMAR\"\r\n          textInEn=\"ATH\"\r\n          currency={currency}\r\n          value={coinStats.ath}\r\n          appLanguage={appLanguage}\r\n          tagDescriptionPt=\"PMAR = Preço Mais Alto Registrado. É o valor mais alto que essa criptomoeda já alcançou desde que entrou em circulação.\"\r\n          tagDescriptionEn=\"All-time High (ATH). It's the highest price value this coin ever had since it first started circulating.\"\r\n        />\r\n        <InfoTag\r\n          className=\"info-container\"\r\n          textInPt=\"PMBR\"\r\n          textInEn=\"ATL\"\r\n          currency={currency}\r\n          value={coinStats.atl}\r\n          appLanguage={appLanguage}\r\n          tagDescriptionPt=\"PMBR = Preço Mais Baixo Registrado. É o valor mais baixo que essa criptomoeda já alcançou desde que entrou em circulação.\"\r\n          tagDescriptionEn=\"All-time Low (ATL). It's the lowest price value this coin ever had since it first started circulating.\"\r\n        />\r\n        <InfoTag\r\n          className=\"info-container\"\r\n          textInPt=\"Fornecimento Circulante\"\r\n          textInEn=\"Circulating Supply\"\r\n          currency={\"\"}\r\n          value={coinStats.circulating_supply}\r\n          appLanguage={appLanguage}\r\n          tagDescriptionPt=\"É a quantidade de moedas que estão em circulação no mercado nesse exato momento, que podem ser negociadas pelo público.\"\r\n          tagDescriptionEn=\"The amount of coins that are circulating in the market and are tradeable by the public.\"\r\n        />\r\n        <InfoTag\r\n          className=\"info-container\"\r\n          textInPt=\"Volume Total\"\r\n          textInEn=\"Total Volume\"\r\n          currency={currency}\r\n          value={coinStats.total_volume}\r\n          appLanguage={appLanguage}\r\n          tagDescriptionPt=\"Uma medida do volume de negociação total desta criptomeda em todas as plataformas rastreadas nas últimas 24 horas. Esse valor é rastreado continuamente, sem horário de abertura e/ou fechamento.\"\r\n          tagDescriptionEn=\"A measure of a cryptocurrency trading volume across all tracked platforms in the last 24 hours. This is tracked on a rolling 24-hour basis with no open/closing times.\"\r\n        />\r\n        <InfoTag\r\n          className=\"info-container\"\r\n          textInPt=\"Avaliação totalmente diluída\"\r\n          textInEn=\"Fully Diluted Valuation\"\r\n          currency={currency}\r\n          value={coinStats.fully_diluted_valuation}\r\n          appLanguage={appLanguage}\r\n          tagDescriptionPt=\"Pode ser definido como a capitalização de mercado do projeto, uma vez que a equipe de desenvolvimento da moeda tenha emitido o número máximo possível de fichas. Em outras palavras, é um método de calcular a capitalização de mercado futura de um projeto. Podem levar vários anos até que essa previsão seja alcançada. Se este estiver vazio, não há informações suficientes para calcular este valor.\"\r\n          tagDescriptionEn=\"The market capitalization (valuation) if the max supply of a coin is in circulation. Note that it can take 3, 5, 10 or more years before the FDV can be reached, depending on how the emission schedule is designed. If its empty, the FDV is still null.\"\r\n        />\r\n      </div>\r\n\r\n      <LineChart\r\n        pricesDatapoints={pricesDatapoints}\r\n        currency={currency}\r\n        appLanguage={appLanguage}\r\n        onGetDays={numberOfDaysHandler}\r\n        selectedCoin={selectedCoin}\r\n        viewportSize={viewportSize}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoinDetails;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst NewsCard = ({ author, title, date, description, image, url }) => {\r\n  return (\r\n    <Card className=\"news-card border-0\">\r\n      <Card.Body\r\n        style={{\r\n          backgroundColor: \"#072F49\",\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <img src={image} alt=\"Imagem destaque da notícia\"></img>{\" \"}\r\n          <Card.Title>\r\n            <a target=\"_blank\" rel=\"noreferrer\" href={url}>\r\n              {`${title} `}\r\n            </a>\r\n          </Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">{author}</Card.Subtitle>\r\n          <Card.Text>{description}</Card.Text>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NewsCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport NewsCard from \"./NewsCard\";\r\nimport axios from \"axios\";\r\nimport \"./NewsSection.css\";\r\n\r\nconst NewsSection = ({ appLanguage }) => {\r\n  //State\r\n  const [newsfeed, setNewsfeed] = useState([]);\r\n  const [numberOfNewsBeingShown, setNumberOfNewsBeingShown] = useState(4);\r\n  const [showMoreNewsDisplay, setShowMoreNewsDisplay] = useState(\"in-line\");\r\n\r\n  //Manipulação de datas\r\n  let date = new Date();\r\n  let today = date.toISOString().slice(0, 10);\r\n  let yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\r\n  yesterday = yesterday.toISOString().slice(0, 10);\r\n\r\n  //fetch de notícias pelo endpoint\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://newsapi.org/v2/everything?q=${\r\n          appLanguage === \"pt-BR\" ? \"criptomoedas\" : \"cryptocurrency\"\r\n        }&from=${yesterday}&to=${today}&sortBy=popularity&apiKey=52318b9641b24216952426d6b33d447c`\r\n      )\r\n      .then((response) => {\r\n        const newsfeedArray = response.data.articles;\r\n        if (newsfeedArray.length > 16) newsfeedArray.length = 16;\r\n        setNewsfeed(newsfeedArray);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [appLanguage]);\r\n\r\n  //Botão de 'mostrar mais...'\r\n  const showMoreNewsHandler = () => {\r\n    numberOfNewsBeingShown < newsfeed.length\r\n      ? setNumberOfNewsBeingShown(numberOfNewsBeingShown + 4)\r\n      : setShowMoreNewsDisplay(\"none\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"news-section-container\">\r\n      <h2>{appLanguage === \"pt-BR\" ? \"Últimas Notícias\" : \"Latest News\"}</h2>\r\n\r\n      <div className=\"news-container\">\r\n        {/* \r\n                <div className=\"cards-container\">\r\n          {filteredCoins.map((coin) => {\r\n            return (\r\n              <CoinCard\r\n                coin={coin}\r\n                currency={currency}\r\n                appLanguage={appLanguage}\r\n                selectedCoin={coin.name}\r\n                onClick={selectedCoinHandler}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        \r\n        */}\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          {newsfeed\r\n            .filter((item, index) => index < numberOfNewsBeingShown)\r\n            .map((news) => {\r\n              return (\r\n                <NewsCard\r\n                  image={news.urlToImage}\r\n                  author={news.source.name}\r\n                  title={news.title}\r\n                  description={news.description}\r\n                  url={news.url}\r\n                />\r\n                // <div className=\"news\" key={news.title}>\r\n                //   <div className=\"news-desc-container\">\r\n                //     <img src={news.urlToImage} alt=\"\" className=\"news-img\" />\r\n                //     <h4 className=\"news-headline\">\r\n                //       {`${news.title} `}\r\n                //       <FontAwesomeIcon icon={faExternalLinkAlt} />\r\n                //     </h4>\r\n                //     <h6 className=\"news-author\">{`${news.source.name} - ${news.publishedAt}`}</h6>\r\n                //     <p className=\"news-desc\">\r\n                //       {`${news.description.slice(0, 90)}[...]`}\r\n                //     </p>\r\n                //   </div>\r\n                // </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n      <Button\r\n        style={{ display: `${showMoreNewsDisplay}` }}\r\n        variant=\"link\"\r\n        onClick={showMoreNewsHandler}\r\n      >\r\n        {appLanguage === \"pt-BR\" ? \"Mostrar mais...\" : \"Show More...\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsSection;\r\n","const windowDimension = () => {\r\n  const width =\r\n    window.innerWidth ||\r\n    document.documentElement.clientWidth ||\r\n    document.body.clientWidth;\r\n  const height =\r\n    window.innerHeight ||\r\n    document.documentElement.clientHeight ||\r\n    document.body.clientHeight;\r\n  return { width, height };\r\n};\r\n\r\nexport default windowDimension;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst ScrollToTop = () => {\r\n  //states\r\n  const [showScroll, setShowScroll] = useState(false);\r\n\r\n  const scrollToTopHandler = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  const checkScrollVisibility = () => {\r\n    if (!showScroll && window.pageYOffset > 600) setShowScroll(true);\r\n    else if (showScroll && window.pageYOffset <= 600) setShowScroll(false);\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", checkScrollVisibility);\r\n\r\n  return (\r\n    <Button\r\n      style={{\r\n        display: !showScroll ? \"none\" : \"initial\",\r\n        position: \"fixed\",\r\n        bottom: \"0\",\r\n        right: \"0\",\r\n        margin: \"1rem 1.5rem\",\r\n        cursor: \"default\",\r\n      }}\r\n      className=\"scroll-button\"\r\n      onClick={scrollToTopHandler}\r\n    >\r\n      <FontAwesomeIcon icon={faArrowUp}></FontAwesomeIcon>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithubSquare, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div style={{ display: \"flex\" }}>\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          href=\"https://github.com/athosfranco\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faGithubSquare}\r\n            style={{\r\n              color: \"#073654\",\r\n              fontSize: \"3rem\",\r\n              marginRight: \"10px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          />\r\n        </a>\r\n\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          href=\"https://www.linkedin.com/in/athosfranco/\"\r\n        >\r\n          {\" \"}\r\n          <FontAwesomeIcon\r\n            icon={faLinkedin}\r\n            style={{ color: \"#073654\", fontSize: \"3rem\", cursor: \"pointer\" }}\r\n          />\r\n        </a>\r\n      </div>\r\n\r\n      <p>Made with ❤ by Athos Franco</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Components/Header/Header\";\nimport CoinList from \"./Components/CoinList/CoinList.jsx\";\nimport NavbarContainer from \"./Components/Navbar/NavbarContainer.jsx\";\nimport CoinDetails from \"./Components/CoinDetails/CoinDetails\";\nimport NewsSection from \"./Components/NewsSection/NewsSection.jsx\";\nimport windowDimension from \"./windowDimension\";\nimport ScrollToTop from \"./Components/ScrollToTop/ScrollToTop\";\nimport Footer from \"./Components/Footer/Footer\";\n\nimport \"./App.css\";\n\nfunction App() {\n  //Pega a dimensão da viewport\n  const viewportSize = windowDimension();\n\n  //array de moedas de conversão\n  const currencies = [\n    { text: \"BRL (R$)\", value: \"brl\" },\n    { text: \"USD (US$)\", value: \"usd\" },\n    { text: \"EUR (€)\", value: \"eur\" },\n    { text: \"JPY (¥)\", value: \"jpy\" },\n  ];\n\n  //States\n  const [search, setSearch] = useState(\"\");\n  const [coins, setCoins] = useState([]);\n  const [appLanguage, setAppLanguage] = useState(\"pt-BR\");\n  const [currency, setCurrency] = useState(\n    navigator.language === \"pt-BR\" ? \"brl\" : \"usd\"\n  );\n  const [coinData, setCoinData] = useState(null);\n  const [numberOfCoinsShown, setNumberOfCoinsShown] = useState(25);\n\n  //Referência de scroll\n  const scrollRef = useRef(null);\n  const newsRef = useRef(null);\n\n  //Executa scroll para focar no elemento em ênfase\n  const scrollToTop = () => scrollRef.current.scrollIntoView();\n  const scrollToNews = () => newsRef.current.scrollIntoView();\n\n  //Define o idioma do app na inicialização\n  useEffect(() => {\n    navigator.language === \"pt-BR\"\n      ? setAppLanguage(\"pt-BR\")\n      : setAppLanguage(\"en-US\");\n  }, []);\n\n  //Altera o idioma da página\n  const appLanguageHandler = (chosenLanguage) => setAppLanguage(chosenLanguage);\n\n  //pega os dados da API sempre que a currency for atualizada\n  let endpoint = `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=${numberOfCoinsShown}&page=1&sparkline=false`;\n\n  useEffect(() => {\n    axios\n      .get(endpoint)\n      .then((response) => {\n        setCoins(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [currency, numberOfCoinsShown]);\n\n  //Mecanismo de busca em tempo real\n  const searchHandler = (inputData) => setSearch(inputData);\n\n  const filteredCoins = coins.filter((coin) =>\n    coin.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  //String do símbolo do valor monetário\n  let currencyString = currencies\n    .find((data) => data.value === currency)\n    .text.split(\" \")[1];\n\n  //pega data do navdropdown\n  const currencyHandler = (newCurrency) => setCurrency(newCurrency);\n\n  //Pega a moeda selecionada pelo usuário e exibe detalhes (data liftup: CoinCard >> CoinList >> App)\n  const showCoinDetailHandler = (coinName) => {\n    const coinObject = coins.find((coin) => coin.name === coinName);\n    setCoinData(coinObject);\n    scrollToTop();\n  };\n\n  //Fecha a janela de detalhes da moeda e volta pra lista\n  const closeHandler = () => setCoinData(null);\n\n  //Pega o número de moedas a ser exibido na página (Header.jsx -> App.jsx)\n  const listLengthHandler = (value) => {\n    setNumberOfCoinsShown(value);\n  };\n\n  return (\n    <div className=\"coin-app\">\n      <NavbarContainer\n        currencies={currencies}\n        currency={currency}\n        appLanguage={appLanguage}\n        onSetCurrency={currencyHandler}\n        onSwitchLanguage={appLanguageHandler}\n        viewportSize={viewportSize}\n      />\n      <Header\n        appLanguage={appLanguage}\n        onGetInputData={searchHandler}\n        onGetNumberOfCoinsShown={listLengthHandler}\n      />\n      <div ref={scrollRef} style={{ marginBottom: \"30px\" }}></div>\n      {coinData ? (\n        <CoinDetails\n          currency={currency}\n          appLanguage={appLanguage}\n          selectedCoin={coinData}\n          onCloseCoinDetail={closeHandler}\n          viewportSize={viewportSize}\n        />\n      ) : (\n        <CoinList\n          onGetCoinData={showCoinDetailHandler}\n          currencies={currencies}\n          currency={currency}\n          currencyString={currencyString}\n          filteredCoins={filteredCoins}\n          appLanguage={appLanguage}\n        />\n      )}\n      <div ref={newsRef} style={{ marginBottom: \"30px\" }}></div>\n      <NewsSection appLanguage={appLanguage} />\n      <ScrollToTop />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}